<configuration debug="false" scan="true" scanPeriod="60 seconds">
    <!-- 设置日志输出根目录 -->
    <property name="log.dir" value="/data/joblog/order-soa"/>
    <property name="encoding" value="UTF-8"/>
    <property name="normal-pattern"
              value="%d{yyyy-MM-dd.HH:mm:ss} %-5level [%thread] %logger{10} [%line]  %msg%n"/>
    <property name="console-pattern"
              value="%d{yyyy-MM-dd HH:mm:ss}|[%thread]|%.-5level|%-40.40logger{0}[%line] |%msg%n"/>

    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${console-pattern}</pattern>
            <charset>${encoding}</charset>
        </encoder>
    </appender>

    <appender name="jobDebugAppender"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.dir}/job.debug.log</file>
        <prudent>false</prudent>
        <append>true</append>
        <encoder>
            <pattern>${normal-pattern}</pattern>
            <charset>${encoding}</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名 -->
            <fileNamePattern>${log.dir}/job.debug.%d{yyyy-MM-dd}.%i.log.gz
            </fileNamePattern>
            <maxHistory>20</maxHistory>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--日志文件最大的大小 -->
                <maxFileSize>1024MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>


    <appender name="ctripLogAppender"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.dir}/ctrip.log</file>
        <prudent>false</prudent>
        <append>true</append>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <encoder>
            <pattern>${normal-pattern}</pattern>
            <charset>${encoding}</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名 -->
            <fileNamePattern>${log.dir}/job.debug.%d{yyyy-MM-dd}.%i.log.gz
            </fileNamePattern>
            <maxHistory>20</maxHistory>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--日志文件最大的大小 -->
                <maxFileSize>1024MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="jobErrorAppender"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.dir}/job.error.log</file>
        <prudent>false</prudent>
        <append>true</append>
        <encoder>
            <pattern>${normal-pattern}</pattern>
            <charset>${encoding}</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名 -->
            <fileNamePattern>${log.dir}/job.error.%d{yyyy-MM-dd}.%i.log.gz
            </fileNamePattern>
            <maxHistory>20</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--日志文件最大的大小 -->
                <maxFileSize>1024MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 只打印错误日志 -->
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="dubboErrorAppender"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.dir}/job.dubbo.error.log</file>
        <prudent>false</prudent>
        <append>true</append>
        <encoder>
            <pattern>${normal-pattern}</pattern>
            <charset>${encoding}</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名 -->
            <fileNamePattern>${log.dir}/job.dubbo.error.%d{yyyy-MM-dd}.%i.log.gz
            </fileNamePattern>
            <maxHistory>20</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--日志文件最大的大小 -->
                <maxFileSize>1024MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 只打印错误日志 -->
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <logger name="com.hnair" level="INFO" addtivity="false">
        <appender-ref ref="jobDebugAppender"/>
        <appender-ref ref="jobErrorAppender"/>
    </logger>

    <logger name="com.alibaba.dubbo" level="ERROR" addtivity="false">
        <appender-ref ref="dubboErrorAppender"/>
    </logger>
    <logger name="org.mybatis.spring" level="ERROR" addtivity="false">
        <appender-ref ref="jobDebugAppender"/>
    </logger>

    <logger name="org.springframework.amqp.rabbit.listener" level="ERROR" addtivity="false">
        <appender-ref ref="dubboErrorAppender"/>
    </logger>

    <logger name="redis.clients" level="ERROR" addtivity="false">
        <appender-ref ref="jobErrorAppender"/>
    </logger>

    <logger name="org.mybatis">
        <level value="INFO"/>
        <appender-ref ref="stdout"/>
        <appender-ref ref="ctripLogAppender"/>
    </logger>
    <logger name="java.sql">
        <level value="INFO"/>
        <appender-ref ref="stdout"/>
        <appender-ref ref="ctripLogAppender"/>
    </logger>
    <root level="INFO">
        <appender-ref ref="stdout"/>
        <appender-ref ref="jobDebugAppender"/>
        <appender-ref ref="jobErrorAppender"/>
        <appender-ref ref="dubboErrorAppender"/>
    </root>
</configuration>